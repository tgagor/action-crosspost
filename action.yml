name: Crosspost Action
description: "Automatically submits URLs to variety of social networks like: Bluesky, Mastodon, Twitter, LinedIn, Discord, Telgram, Dev.to."
inputs:
  sitemap-url:
    description: URL to sitemap.xml
    required: true
  since:
    description: Post only items newer than this (e.g. '1' 'since-unit' ago)
    required: false
    default: "1"
  since-unit:
    description: Unit for 'since' input (e.g. minute, hour, day, week, month, year)
    required: false
    default: day
  limit:
    description: Maximum number of items to post. Use 0 for no limit.
    required: false
    default: "5"
  failure-strategy:
    description: "Define how to handle failures. Options: ignore, error."
    required: false
    default: ignore
  lastmod-required:
    description: "Define the behavior when lastmod tag is not present in sitemap. Options: ignore, error."
    required: false
    default: error
  exclude-urls:
    description: "Exclude URLs, that you don't want to be posted."
    required: false
    default: ""
  filter-urls:
    description: "Only include URLs that match this filter (e.g. /blog/)."
    required: false
    default: ""

  message:
    description: Message to include with the post. Use {url} to include the URL.
    required: false
    default: "{url}"

  dry-run:
    description: If true, the action will only simulate posting without actually sending any posts.
    required: false
    default: "false"

  # Twitter
  twitter-access-token-key:
    description: Twitter Access Token Key
    required: false
    default: ""
  twitter-access-token-secret:
    description: Twitter Access Token Secret
    required: false
    default: ""
  twitter-api-consumer-key:
    description: Twitter API Consumer Key
    required: false
    default: ""
  twitter-api-consumer-secret:
    description: Twitter API Consumer Secret
    required: false
    default: ""

  # Mastodon
  mastodon-access-token:
    description: Mastodon Access Token
    required: false
    default: ""
  mastodon-host:
    description: Mastodon Host (e.g. mastodon.social)
    required: false
    default: ""

  # Bluesky
  bluesky-host:
    description: Bluesky Host (e.g. bsky.social)
    required: false
    default: ""
  bluesky-identifier:
    description: Bluesky Identifier (e.g. user.bsky.social)
    required: false
    default: ""
  bluesky-password:
    description: Bluesky Password for the account
    required: false
    default: ""

  # LinkedIn
  linkedin-access-token:
    description: LinkedIn Access Token
    required: false
    default: ""

  # Discord
  discord-bot-token:
    description: Discord Bot Token
    required: false
    default: ""
  discord-channel-id:
    description: Discord Channel ID
    required: false
    default: ""

  # Discord Webhook
  discord-webhook-url:
    description: Discord Webhook URL
    required: false
    default: ""

  # Dev.to
  devto-api-key:
    description: dev.to API Key
    required: false
    default: ""

  # Telegram
  telegram-bot-token:
    description: Telegram Bot Token
    required: false
    default: ""
  telegram-chat-id:
    description: Telegram Chat ID
    required: false
    default: ""

  # Slack
  slack-token:
    description: Slack Token
    required: false
    default: ""
  slack-channel:
    description: Slack Channel
    required: false
    default: ""

  # # General Crosspost .env
  # crosspost_detenv_file:
  #   description: Crosspost .env file path
  #   required: false
  #   default: .env

outputs:
  latest-urls:
    description: Latest URLs found in sitemap
    value: ${{ steps.get-urls.outputs.latest-urls }}
  processed-urls:
    description: Only filtered & non-excluded URLs
    value: ${{ steps.get-urls.outputs.processed-urls }}

runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Install Python deps
      shell: bash
      run: |
        uv pip install -r scripts/pyproject.toml

    - name: Get URLs from Sitemap
      id: get-urls
      shell: bash
      run: |
        uv run python scripts/get_urls.py \
          --sitemap-url "${{ inputs.sitemap-url }}" \
          --since "${{ inputs.since }}" \
          --since-unit "${{ inputs.since-unit }}" \
          --exclude-urls "${{ inputs.exclude-urls }}" \
          --filter-urls "${{ inputs.filter-urls }}"

    - name: Install Node
      uses: actions/setup-node@v5
      with:
        node-version-file: package.json
        cache: npm

    - name: Install crosspost
      shell: bash
      run: |
        npm ci

    - name: Post URLs with Crosspost
      id: post-urls
      shell: bash
      if: ${{ steps.get-urls.outputs.processed-urls }}
      env:
        MESSAGE: ${{ inputs.message }}
        SENT_TO_TWITTER: ${{ (inputs.twitter-access-token-key != '' && inputs.twitter-access-token-secret != '') || (inputs.twitter-api-consumer-key != '' && inputs.twitter-api-consumer-secret != '') }}
        TWITTER_ACCESS_TOKEN_KEY: ${{ inputs.twitter-access-token-key }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ inputs.twitter-access-token-secret }}
        TWITTER_API_CONSUMER_KEY: ${{ inputs.twitter-api-consumer-key }}
        TWITTER_API_CONSUMER_SECRET: ${{ inputs.twitter-api-consumer-secret }}
        SENT_TO_MASTODON: ${{ inputs.mastodon-access-token != '' && inputs.mastodon-host != '' }}
        MASTODON_ACCESS_TOKEN: ${{ inputs.mastodon-access-token }}
        MASTODON_HOST: ${{ inputs.mastodon-host }}
        SENT_TO_BLUESKY: ${{ inputs.bluesky-host != '' && inputs.bluesky-identifier != '' && inputs.bluesky-password != '' }}
        BLUESKY_HOST: ${{ inputs.bluesky-host }}
        BLUESKY_IDENTIFIER: ${{ inputs.bluesky-identifier }}
        BLUESKY_PASSWORD: ${{ inputs.bluesky-password }}
        SENT_TO_LINKEDIN: ${{ inputs.linkedin-access-token != '' }}
        LINKEDIN_ACCESS_TOKEN: ${{ inputs.linkedin-access-token }}
        SENT_TO_DISCORD: ${{ inputs.discord-bot-token != '' && inputs.discord-channel-id != '' }}
        DISCORD_BOT_TOKEN: ${{ inputs.discord-bot-token }}
        DISCORD_CHANNEL_ID: ${{ inputs.discord-channel-id }}
        SENT_TO_DISCORD_WEBHOOK: ${{ inputs.discord-webhook-url != '' }}
        DISCORD_WEBHOOK_URL: ${{ inputs.discord-webhook-url }}
        SENT_TO_DEVTO: ${{ inputs.devto-api-key != '' }}
        DEVTO_API_KEY: ${{ inputs.devto-api-key }}
        SENT_TO_TELEGRAM: ${{ inputs.telegram-bot-token != '' && inputs.telegram-chat-id != '' }}
        TELEGRAM_BOT_TOKEN: ${{ inputs.telegram-bot-token }}
        TELEGRAM_CHAT_ID: ${{ inputs.telegram-chat-id }}
        SENT_TO_SLACK: ${{ inputs.slack-token != '' && inputs.slack-channel != '' }}
        SLACK_TOKEN: ${{ inputs.slack-token }}
        SLACK_CHANNEL: ${{ inputs.slack-channel }}
        DRY_RUN: ${{ inputs.dry-run == 'true' }}
      run: |
        cmd="npx crosspost"
        if [ "$SENT_TO_TWITTER" = "true" ]; then
          cmd="$cmd --twitter"
        fi
        if [ "$SENT_TO_MASTODON" = "true" ]; then
          cmd="$cmd --mastodon"
        fi
        if [ "$SENT_TO_BLUESKY" = "true" ]; then
          cmd="$cmd --bluesky"
        fi
        if [ "$SENT_TO_LINKEDIN" = "true" ]; then
          cmd="$cmd --linkedin"
        fi
        if [ "$SENT_TO_DISCORD" = "true" ]; then
          cmd="$cmd --discord"
        fi
        if [ "$SENT_TO_DISCORD_WEBHOOK" = "true" ]; then
          cmd="$cmd --discord-webhook"
        fi
        if [ "$SENT_TO_DEVTO" = "true" ]; then
          cmd="$cmd --devto"
        fi
        if [ "$SENT_TO_TELEGRAM" = "true" ]; then
          cmd="$cmd --telegram"
        fi
        if [ "$SENT_TO_SLACK" = "true" ]; then
          cmd="$cmd --slack"
        fi
        while IFS= read -r url; do
          final_cmd="$cmd"
          if [ -n "$MESSAGE" ]; then
            msg="${MESSAGE//\{url\}/$url}"
            final_cmd="$final_cmd \"$msg\""
          else
            final_cmd="$final_cmd \"$url\""
          fi
          if [ "$DRY_RUN" = "true" ]; then
            echo "[Dry Run] $final_cmd"
            continue
          fi
          echo "Executing: $final_cmd"
          eval $final_cmd
        done <<< "${{ steps.get-urls.outputs.processed-urls }}"
